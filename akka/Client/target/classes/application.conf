    pinned-dispatcher {
      executor = "thread-pool-executor"
      type = PinnedDispatcher
    }


akka {

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]


  actor {
    provider = "akka.remote.RemoteActorRefProvider"

        kryo  {
            idstrategy = "default"

            # Define a default size for serializer pool
            # Try to define the size to be at least as big as the max possible number
            # of threads that may be used for serialization, i.e. max number
            # of threads allowed for the scheduler
            serializer-pool-size = 16

            # Define a default size for byte buffers used during serialization
            buffer-size = 4096

            # The serialization byte buffers are doubled as needed until they exceed max-buffer-size and an exception is thrown. Can be -1 for no maximum.
            max-buffer-size = -1

            # Log implicitly registered classes. Useful, if you want to know all classes
            # which are serialized. You can then use this information in the mappings and/or
            # classes sections
            implicit-registration-logging = false

            kryo-trace = false

        }

        serializers {
            java = "akka.serialization.JavaSerializer"
            # Define kryo serializer
            kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
        }

    serialization-bindings {
      "example.akka.remote.shared.Messages$Sum" = kryo
      "example.akka.remote.shared.Messages$SumAsk" = kryo
      "scala.Product" = kryo
      "scala.collection.Map" = kryo
      "scala.collection.Set" = kryo
      "scala.collection.generic.MapFactory" = kryo
      "scala.collection.generic.SetFactory" = kryo
      "scala.collection.immutable.HashMap$HashTrieMap" = kryo
      "scala.collection.immutable.HashSet$HashTrieSet" = kryo
      "scala.collection.immutable.TreeMap" = kryo
      "[Ljava.lang.Object;" = kryo
      "akka.actor.ActorRef" = kryo
    }

  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2553
    }
  }
}